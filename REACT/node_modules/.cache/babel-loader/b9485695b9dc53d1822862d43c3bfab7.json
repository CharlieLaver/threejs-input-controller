{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charl\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\portfolio\\\\portfolio\\\\src\\\\components\\\\Contact\\\\Contact.js\";\nimport React, { Component } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport './contact.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      subject: '',\n      message: '',\n      nameError: false,\n      emailError: false,\n      subjectError: false,\n      messageError: false,\n      sent: false\n    };\n\n    this.handleName = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handleSubject = e => {\n      this.setState({\n        subject: e.target.value\n      });\n    };\n\n    this.handleMessage = e => {\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.formSubmit = e => {\n      //form validation\n      const validateForm = () => {\n        let myregex = new RegExp(/^[a-zA-Z0-9 _+-]*$/);\n        let emailRegex = new RegExp(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/);\n        let name = document.getElementById('name').value;\n        let email = document.getElementById('email').value;\n        let subject = document.getElementById('subject').value;\n        let message = document.getElementById('message').value;\n\n        if (!myregex.test(name)) {\n          this.setState({\n            nameError: true\n          });\n          return false;\n        }\n\n        if (!emailRegex.test(email)) {\n          this.setState({\n            emailError: true\n          });\n          return false;\n        }\n\n        if (!myregex.test(subject)) {\n          this.setState({\n            subjectError: true\n          });\n          return false;\n        }\n\n        if (!myregex.test(message)) {\n          this.setState({\n            messageError: true\n          });\n          return false;\n        }\n\n        return true;\n      };\n\n      if (validateForm() === true) {\n        e.preventDefault();\n        let data = {\n          name: this.state.name,\n          email: this.state.email,\n          subject: this.state.subject,\n          message: this.state.message\n        };\n        axios.post('http://localhost:3001/', data).then(res => {\n          this.setState({\n            sent: true\n          }, this.resetForm());\n        }).catch(() => {\n          console.log('message not sent');\n        });\n      }\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        name: '',\n        email: '',\n        subject: '',\n        message: ''\n      });\n\n      setTimeout = () => {\n        this.setState({\n          sent: false\n        }, 3000);\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.formSubmit,\n        id: \"contact\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Get in Touch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"input-box input1\",\n          type: \"text\",\n          placeholder: \"Name\",\n          id: \"name\",\n          value: this.state.name,\n          onChange: this.handleName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"input-box input2\",\n          type: \"text\",\n          placeholder: \"Email\",\n          id: \"email\",\n          value: this.state.email,\n          onChange: this.handleEmail,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"input-box input3\",\n          type: \"text\",\n          placeholder: \"Subject\",\n          id: \"subject\",\n          value: this.state.subject,\n          onChange: this.handleSubject,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"input-box input4\",\n          type: \"text\",\n          placeholder: \"Message\",\n          as: \"textarea\",\n          rows: \"5\",\n          id: \"message\",\n          value: this.state.message,\n          onChange: this.handleMessage,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), this.state.sent ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Message has been sent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 30\n        }, this) : null, this.state.nameError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Name not valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 35\n        }, this) : null, this.state.emailError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Email not valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 36\n        }, this) : null, this.state.subjectError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Subject not valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 38\n        }, this) : null, this.state.messageError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Message not valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 38\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-outline-success\",\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/charl/OneDrive/Desktop/React-Projects/portfolio/portfolio/src/components/Contact/Contact.js"],"names":["React","Component","FormControl","axios","Form","state","name","email","subject","message","nameError","emailError","subjectError","messageError","sent","handleName","e","setState","target","value","handleEmail","handleSubject","handleMessage","formSubmit","validateForm","myregex","RegExp","emailRegex","document","getElementById","test","preventDefault","data","post","then","res","resetForm","catch","console","log","setTimeout","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport './contact.css';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class Form extends Component {\r\n\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        subject:'',\r\n        message:'',\r\n\r\n        nameError:false,\r\n        emailError:false,\r\n        subjectError:false,\r\n        messageError:false,\r\n        sent:false\r\n    }\r\n\r\n    // handle inputs\r\n\r\n    handleName=(e)=>{\r\n        this.setState({\r\n            name:e.target.value\r\n    })\r\n    }\r\n\r\n    handleEmail=(e)=>{\r\n        this.setState({\r\n            email:e.target.value\r\n    })\r\n    }\r\n\r\n    handleSubject=(e)=>{\r\n        this.setState({\r\n            subject:e.target.value\r\n    })\r\n    }\r\n\r\n    handleMessage=(e)=>{\r\n        this.setState({\r\n            message:e.target.value\r\n    })\r\n    }\r\n\r\n    \r\n    formSubmit=(e)=>{\r\n\r\n        //form validation\r\n        const validateForm = () => {\r\n        \r\n            let myregex = new RegExp(/^[a-zA-Z0-9 _+-]*$/);\r\n            let emailRegex = new RegExp(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/);\r\n            let name = document.getElementById('name').value;\r\n            let email = document.getElementById('email').value;\r\n            let subject = document.getElementById('subject').value;\r\n            let message = document.getElementById('message').value;\r\n\r\n            if(!myregex.test(name))\r\n            {\r\n                this.setState({nameError:true});\r\n                return false;\r\n            }\r\n            \r\n            if(!emailRegex.test(email))\r\n            {\r\n                this.setState({emailError:true});\r\n                return false;\r\n            }\r\n            \r\n            if(!myregex.test(subject))\r\n            {\r\n                this.setState({subjectError:true});\r\n                return false;\r\n            }\r\n\r\n            if(!myregex.test(message))\r\n            {\r\n                this.setState({messageError:true});\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n        \r\n        if(validateForm() === true) {\r\n\r\n            e.preventDefault();\r\n\r\n        let data = {\r\n            name:this.state.name,\r\n            email:this.state.email,\r\n            subject:this.state.subject,\r\n            message:this.state.message\r\n        }\r\n\r\n        axios.post('http://localhost:3001/',data)\r\n        .then(res=>{\r\n            this.setState({\r\n                sent:true,\r\n            },this.resetForm())\r\n        }).catch(()=>{\r\n            console.log('message not sent');\r\n        })\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    // for reseting initial data\r\n    resetForm = () => {\r\n      this.setState({\r\n          name:'',\r\n          email:'',\r\n          subject:'',\r\n          message:''\r\n      })\r\n\r\n      setTimeout = () => {\r\n          this.setState({\r\n              sent:false,\r\n          },3000)\r\n      };\r\n    }\r\n\r\nrender() {\r\n    return ( \r\n        <>\r\n\r\n        <form onSubmit={this.formSubmit} id='contact'>\r\n            <h1>Get in Touch</h1>\r\n            <FormControl className='input-box input1' type='text' placeholder='Name' id='name' value={this.state.name} onChange={this.handleName} required/>\r\n            <FormControl className='input-box input2' type='text' placeholder='Email' id='email' value={this.state.email} onChange={this.handleEmail} required/>\r\n            <FormControl className='input-box input3' type='text' placeholder='Subject' id='subject' value={this.state.subject} onChange={this.handleSubject} required/>\r\n            <FormControl className='input-box input4' type='text' placeholder='Message'as='textarea' rows='5' id='message'value={this.state.message} onChange={this.handleMessage} required/>\r\n            \r\n    \r\n            {this.state.sent?<div>Message has been sent</div>:null}\r\n            {this.state.nameError?<div>Name not valid</div>:null}\r\n            {this.state.emailError?<div>Email not valid</div>:null}\r\n            {this.state.subjectError?<div>Subject not valid</div>:null}\r\n            {this.state.messageError?<div>Message not valid</div>:null}  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n            <div className='send-btn'><button type='submit' className='btn btn-outline-success'>Send Message</button></div>\r\n\r\n        </form>\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}