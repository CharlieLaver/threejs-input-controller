{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charl\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\portfolio\\\\portfolio\\\\src\\\\components\\\\Projects\\\\Projects.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nimport ProjectUI from './ProjectUI';\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Projects = () => {\n  _s();\n\n  useEffect(() => {\n    const element = ref.current;\n    gsap.from(element.querySelector(\".main-image\"), {\n      scrollTrigger: {\n        trigger: '.main-image',\n        toggleActions: \"restart reverse restart reverse\" //             onEnter onLeave  onEnterBack  onLeaveBack\n\n      },\n      x: -400,\n      duration: 3,\n      opacity: 0,\n      ease: 'none'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(ProjectUI, {\n      url: 'https://charlielaver.github.io/netflix-in-react-deploy/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Projects, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/Users/charl/OneDrive/Desktop/React-Projects/portfolio/portfolio/src/components/Projects/Projects.js"],"names":["useRef","useEffect","ProjectUI","gsap","ScrollTrigger","Projects","element","ref","current","from","querySelector","scrollTrigger","trigger","toggleActions","x","duration","opacity","ease"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,aAAT,QAA8B,oBAA9B;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnBJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,OAAO,GAAGC,GAAG,CAACC,OAApB;AACAL,IAAAA,IAAI,CAACM,IAAL,CACIH,OAAO,CAACI,aAAR,CAAsB,aAAtB,CADJ,EAEI;AACAC,MAAAA,aAAa,EAAE;AACXC,QAAAA,OAAO,EAAE,aADE;AAEXC,QAAAA,aAAa,EAAE,iCAFJ,CAGX;;AAHW,OADf;AAMAC,MAAAA,CAAC,EAAC,CAAC,GANH;AAOAC,MAAAA,QAAQ,EAAE,CAPV;AAQAC,MAAAA,OAAO,EAAE,CART;AASAC,MAAAA,IAAI,EAAE;AATN,KAFJ;AAaD,GAfM,EAeJ,EAfI,CAAT;AAiBA,sBACI;AAAK,IAAA,GAAG,EAAEV,GAAV;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,GAAG,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBD;;GAAMF,Q;;KAAAA,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import { useRef, useEffect } from \"react\";\r\nimport ProjectUI from './ProjectUI'\r\nimport { gsap } from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n\r\n\r\n\r\nconst Projects = () => {\r\n\r\n    useEffect(() => {\r\n        const element = ref.current;\r\n        gsap.from(\r\n            element.querySelector(\".main-image\"),\r\n            {\r\n            scrollTrigger: {\r\n                trigger: '.main-image',\r\n                toggleActions: \"restart reverse restart reverse\",\r\n                //             onEnter onLeave  onEnterBack  onLeaveBack\r\n            },\r\n            x:-400,\r\n            duration: 3,\r\n            opacity: 0,\r\n            ease: 'none'\r\n        });\r\n      }, []);\r\n\r\n    return (\r\n        <div ref={ref}>\r\n            <ProjectUI url={'https://charlielaver.github.io/netflix-in-react-deploy/'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n"]},"metadata":{},"sourceType":"module"}